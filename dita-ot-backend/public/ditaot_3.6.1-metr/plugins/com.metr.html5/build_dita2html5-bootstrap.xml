<?xml version="1.0" encoding="UTF-8"?><!-- Copyright © 2017 · infotexture · Roger W. Fienhold Sheen --><!-- See the accompanying LICENSE file for applicable license --><project xmlns:if="ant:if" xmlns:dita="http://dita-ot.sourceforge.net">
  <property file="${dita.plugin.com.metr.html5.dir}/my.properties"/>
  <target name="dita2metrhtml5" depends="bootstrap.theme.init,dita2metrhtml5.init,dita2html5"/>
  
  <target name="bootstrap.scripts.copy" depends="bootstrap.scripts.popover,            bootstrap.scripts.dark.mode"/>
  
  <target name="dita-bootstrap.css.copy" description="Copy CSS files">
    <property name="dita-bootstrap.css.dir" value="${dita.plugin.com.metr.html5.dir}/css/"/>
    
    <!-- Add Common CSS where Bootstrap variables override DITA-OT defaults -->
    <loadfile property="dita-bootstrap.css" srcFile="${dita-bootstrap.css.dir}/common-bootstrap.css"/>
    <echo append="true" message="${line.separator}${dita-bootstrap.css}" if:set="dita-bootstrap.css.add" file="${extend.css.file}"/>
    
    <!--
         Append side-toc CSS for the sidebar if present,
         Otherwise append none-toc CSS if nav-toc=none.
    -->
    <condition property="dita-bootstrap.side-toc.css.file" value="${dita-bootstrap.css.dir}/none-toc.css">
      <equals arg1="${nav-toc}" arg2="none"/>
    </condition>
    <property name="dita-bootstrap.side-toc.css.file" value="${dita-bootstrap.css.dir}/side-toc.css"/>
    
    <loadfile property="dita-bootstrap.side-toc" srcFile="${dita-bootstrap.side-toc.css.file}"/>
    <echo append="true" message="${line.separator}${dita-bootstrap.side-toc}" if:set="dita-bootstrap.css.add" file="${extend.css.file}"/>
    
    <!-- Append Bootstrap scrollspy CSS if scrollspy-toc is set -->
    <condition if:set="dita-bootstrap.css.add" property="dita-bootstrap.scrollspy.css.file" value="${dita-bootstrap.css.dir}/scrollspy-toc.css">
      <not>
        <equals arg1="${scrollspy-toc}" arg2="none"/>
      </not>
    </condition>
    
    <loadfile if:set="dita-bootstrap.scrollspy.css.file" property="dita-bootstrap.scrollspy" srcFile="${dita-bootstrap.scrollspy.css.file}"/>
    <echo if:set="dita-bootstrap.scrollspy.css.file" append="true" message="${line.separator}${dita-bootstrap.scrollspy}" file="${extend.css.file}"/>
    
    <!-- Append Bootstrap menubar-toc CSS if menubar-toc.include=yes -->
    <condition if:set="dita-bootstrap.css.add" property="dita-bootstrap.menubar-toc.css.file" value="${dita-bootstrap.css.dir}/menubar-toc.css">
      <equals arg1="${menubar-toc.include}" arg2="yes"/>
    </condition>
    
    <loadfile if:set="dita-bootstrap.menubar-toc.css.file" property="dita-bootstrap.menubar-toc" srcFile="${dita-bootstrap.menubar-toc.css.file}"/>
    <echo if:set="dita-bootstrap.menubar-toc.css.file" append="true" message="${line.separator}${dita-bootstrap.menubar-toc}" file="${extend.css.file}"/>
    
    
    <!-- Append Bootstrap collapsible CSS if toc is collapsible -->
    <condition if:set="dita-bootstrap.css.add" property="dita-bootstrap.collapsible.css.file" value="${dita-bootstrap.css.dir}/collapsible-toc.css">
      <equals arg1="${nav-toc}" arg2="collapsible"/>
    </condition>
    
    <loadfile if:set="dita-bootstrap.collapsible.css.file" property="dita-bootstrap.collapsible" srcFile="${dita-bootstrap.collapsible.css.file}"/>
    <echo if:set="dita-bootstrap.collapsible.css.file" append="true" message="${line.separator}${dita-bootstrap.collapsible}" file="${extend.css.file}"/>
  </target>
  
  <target name="bootstrap.scripts.popover" if="bootstrap.copy.popover">
    <!-- Add initialization script for popovers and tooltips -->
    <!-- <mkdir dir="${dita.output.dir}/css"/> -->
    <mkdir dir="${dita.output.dir}/js"/>
    <mkdir dir="${dita.output.dir}/images"/>
    <!-- <mkdir dir="${dita.output.dir}/audience_logo"/> -->
    <mkdir dir="${dita.output.dir}/pdf"/>
    
    <copy todir="${dita.output.dir}/js">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/includes" includes="tocLanding.js"/>
    </copy>
    <copy todir="${dita.output.dir}/js">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/includes" includes="commonJS.js"/>
    </copy>
    <copy todir="${dita.output.dir}/js">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/includes" includes="script.js"/>
    </copy>
    <copy todir="${dita.output.dir}/pdf">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/includes" includes="readme.md"/>
    </copy>
    
    <copy todir="${dita.output.dir}/images">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/images" includes="*"/>
    </copy>
    
    <copy todir="${dita.output.dir}/images">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/cfg/common/artwork/html_logo">
        <include name="*.png"/>
        <include name="*.jpg"/>
      </fileset>
    </copy>
    
    <copy todir="${dita.output.dir}">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/cfg/common/artwork/html_logo">
        <include name="*.xml"/>
      </fileset>
    </copy>
  </target>
  
  <target name="bootstrap.scripts.dark.mode" if="bootstrap.copy.dark.mode">
    <!-- Add dark mode initialization script -->
    <mkdir dir="${dita.output.dir}/js"/>
    <copy todir="${dita.output.dir}/js">
      <fileset dir="${dita.plugin.com.metr.html5.dir}/includes" includes="dark-mode-toggler.js"/>
    </copy>
  </target>
  
  <target name="dita2metrhtml5.init">
    <!-- Location of page header template with hard-coded links -->
    <property name="args.hdr" location="${dita.plugin.com.metr.html5.dir}/includes/bs-navbar-default.hdr.xml"/>
    <!-- Location of bootstrap icons if required -->
    <property name="icons.cdn.path" location="${dita.plugin.com.metr.html5.dir}/includes/bootstrap.icons.hdf.xml"/>
    <!-- Entrypoint for XSL transforms -->
    <property name="args.xsl" location="${dita.plugin.com.metr.html5.dir}/xsl/html5-bootstrap.xsl"/>
    <!-- Default parameter values -->
    <property name="args.cssroot" value="plugins/com.metr.html5/css/"/>
    <property name="args.html5.toc.xsl" value="${dita.plugin.com.metr.html5.dir}/Customization/map2html5-cover.xsl"/>
    <property name="args.html5.toc" value="index"/>
    <property name="args.css" value="custom.css"/>
    <property name="args.copycss" value="yes"/>
    <property name="args.csspath" value="css"/>
    <property name="icons.include" value="yes"/>
    <property name="menubar-toc.include" value="no"/>
    <property name="scrollspy-toc" value="none"/>
    <property name="nav-toc" value="collapsible"/>
    <property name="args.breadcrumbs" value="yes"/>
    <property name="popovers.include" value="yes"/>
    <property name="dark.mode.include" value="yes"/>
    <property name="dita-bootstrap.css.add" value="yes"/>
    
    
    <!--
         Load alternate Bootstrap CSS for RTL languages such as Arabic,
         Farsi, Urdu etc. Load standard Bootstrap CSS for LTR languages like English
    -->
    <condition property="bidi.include" value="yes" else="no">
      <matches string="${default.language}" pattern="((ar|arc|bcc|bqi|ckb|dv|fa|glk|he|lrc|mzn|pnb|ps|sd|ug|ur|yi)(\-|$))"/>
    </condition>
    <condition property="args.hdf" value="${dita.plugin.com.metr.html5.dir}/includes/bootstrap.hdf.rtl.xml" else="${dita.plugin.com.metr.html5.dir}/includes/bootstrap.hdf.xml">
      <equals arg1="${bidi.include}" arg2="yes"/>
    </condition>
    
    <!-- Add included javascript functions if required -->
    <condition property="bootstrap.copy.popover">
      <equals arg1="${popovers.include}" arg2="yes"/>
    </condition>
    <condition property="bootstrap.copy.dark.mode">
      <equals arg1="${dark.mode.include}" arg2="yes"/>
    </condition>
  </target>
  
  <target name="bootstrap.theme.init" if="bootstrap.theme">
    <!-- Generate a custom theme based on a hdr template -->
    <tempfile property="bootstrap.theme.file" suffix=".xml" deleteonexit="true" destdir="${java.io.tmpdir}"/>
    <condition property="bootstrap.template.file" value="${dita.plugin.com.metr.html5.dir}/includes/script-only.hdf.xml" else="${dita.plugin.com.metr.html5.dir}/includes/theme.hdf.xml">
      <equals arg1="${bootstrap.theme}" arg2="none"/>
    </condition>
    
    <copy file="${bootstrap.template.file}" toFile="${bootstrap.theme.file}" overwrite="true"/>
    
    <replace file="${bootstrap.theme.file}" token="@@theme@@" value="${bootstrap.theme}"/>
    <property name="args.hdf" value="${bootstrap.theme.file}"/>
  </target>
  
  <target name="MergeDitaTopics">
    <pipeline message="topicmerge" taskname="topic-merge" inputmap="${user.input.file}">
      <module class="org.dita.dost.module.TopicMergeModule">
        <param name="output" location="${output.dir}${file.separator}${dita.map.filename.root}_MERGED.xml"/>
        <param name="style" location="${dita.plugin.com.metr.html5.dir}${file.separator}xsl${file.separator}aurigo.chunk2topic.xsl"/>
      </module>
    </pipeline>
  </target>
  
  <!-- <target name="HelpMapPath">
    <xslt processor="trax" 
          in="${output.dir}${file.separator}${dita.map.filename.root}_MERGED.xml" 
          out="${output.dir}${file.separator}HelpMapPath.xml" 
          style="${dita.plugin.com.metr.html5.dir}${file.separator}xsl${file.separator}index.xsl">
      <param name="OUTPUTDIR" expression="${output.dir}" if:set="output.dir"/>
      <param name="ditamappath" expression="${dita.map.filename.root}" if:set="dita.map.filename.root"/>
      <param name="input.dir.url" expression="${user.input.dir.url}" if:set="input.dir.url"/>
    </xslt>
    
    <echo level="info">*****************************************************************</echo>
    <echo level="info">* ditamappath = ${dita.map.filename.root}</echo>
    <echo level="info">*****************************************************************</echo>
  </target>
  
  
  <target name="CompareHelpMap">
    <xslt processor="trax" 
          in="${output.dir}${file.separator}HelpMapPath.xml" 
          out="${output.dir}${file.separator}Compare.xml" 
          style="${dita.plugin.com.metr.html5.dir}${file.separator}xsl${file.separator}index3.xsl">
      <param name="OUTPUTDIR" expression="${output.dir}" if:set="output.dir"/>
      <param name="ditamappath" expression="${dita.map.filename.root}" if:set="dita.map.filename.root"/>
      <param name="input.dir.url" expression="${user.input.dir.url}" if:set="input.dir.url"/>
      <param name="PLUGINPATDIR" expression="${dita.plugin.com.metr.html5.dir}/cfg/common/artwork/html_logo/HelpMap.xml"/>
    </xslt>
    
    <echo level="info">*****************************************************************</echo>
    <echo level="info">* input.dir.url = ${user.input.dir.url}</echo>
    <echo level="info">* dita.temp.dir = ${dita.temp.dir}</echo>
    <echo level="info">* PLUGINPATDIR = ${dita.plugin.com.metr.html5.dir}/HelpMap/HelpMap.xml</echo>
    <echo level="info">*****************************************************************</echo>
  </target> -->
</project>